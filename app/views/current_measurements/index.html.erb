<div class="page_content">
  <!-- important note: css inline styles are just for testing pruposes. I know, that it's not best practice to have them permanently there. Will put them to a central scss soon. -->
  <div class="first_row">
    <div class="table_container">
      <h1 class="h1">Messdaten</h1>
        <%= will_paginate @current_measurements %>
        <table border="1">
        <thead>
          <tr>
            <th>ID</th>
            <th>Zeit</th>
            <th>Temperatur</th>
            <th>Feuchtigkeit</th>
            <th>IP-basierter Standort</th>
          </tr>
        </thead>
          <tbody>
            <% @current_measurements.each do |measurement| %>
              <tr>
                <td><%= measurement.id %></td>
                <td><%= measurement.created_at.strftime('%Y-%m-%d %H:%M:%S') %></td>
                <td><%= measurement.temperature %></td>
                <td><%= measurement.humidity %></td>
                <td><%= measurement.location_based_on_ip %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
        <%= will_paginate @current_measurements %>
    </div>
    <div class="chart_container">
      <canvas id="temperatureChart"
        data-temperatures='<%= @temperatures.to_json.html_safe %>'
        data-timestamps='<%= @timestamps.map { |t| t.strftime('%H:%M') }.to_json.html_safe %>'>
      </canvas>
    </div>
  </div>
  <div class="second_row">
    <div class="chart_container">
      <canvas id="temperatureChartWeek"
        data-temperatures='<%= @temperatures_week.to_json.html_safe %>'
        data-timestamps='<%= @timestamps_week.map { |t| t.strftime('%a %H:%M') }.to_json.html_safe %>'>
      </canvas>
      <canvas id="temperatureChartAll"
        data-temperatures='<%= @temperatures_all.to_json.html_safe %>'
        data-timestamps='<%= @timestamps_all.map { |t| t.strftime('%Y-%m-%d') }.to_json.html_safe %>'>
      </canvas>
    </div>
  </div>
  <div class="third_row">
    <div class="chart_container">
      <canvas id="humidityChart"
        data-humidities='<%= @humidities.to_json.html_safe %>'
        data-timestamps='<%= @timestamps.map { |t| t.strftime('%H:%M') }.to_json.html_safe %>'>
      </canvas>
    </div>
    <div class="chart_container">
      <canvas id="humidityChartWeek"
        data-humidities='<%= @humidities_week.to_json.html_safe %>'
        data-timestamps='<%= @timestamps_week.map { |t| t.strftime('%a %H:%M') }.to_json.html_safe %>'>
      </canvas>
    </div>
  <div class="fourth_row">
    <div class="chart_container">
      <canvas id="humidityChartAll"
        data-humidities='<%= @humidities_all.to_json.html_safe %>'
        data-timestamps='<%= @timestamps_all.map { |t| t.strftime('%Y-%m-%d') }.to_json.html_safe %>'>
      </canvas>
    </div>
  </div>
</div>

<script type="text/javascript">
  document.addEventListener("DOMContentLoaded", () => {
    // Code für das erste Diagramm (Tägliche Temperatur)
    const ctx = document.getElementById('temperatureChart').getContext('2d');
    const temperatures = JSON.parse(document.getElementById('temperatureChart').getAttribute('data-temperatures'));
    const timestamps = JSON.parse(document.getElementById('temperatureChart').getAttribute('data-timestamps'));
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: timestamps,
            datasets: [{
                label: 'Tagestemperatur',
                data: temperatures,
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: false
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

  // Code für das zweite Diagramm (Wöchentliche Temperatur)
  const ctxWeek = document.getElementById('temperatureChartWeek').getContext('2d');
  const temperaturesWeek = JSON.parse(document.getElementById('temperatureChartWeek').getAttribute('data-temperatures'));
  const timestampsWeek = JSON.parse(document.getElementById('temperatureChartWeek').getAttribute('data-timestamps'));
  new Chart(ctxWeek, {
      type: 'line',
      data: {
          labels: timestampsWeek,
          datasets: [{
              label: 'Wochendurchschnitt Temperatur',
              data: temperaturesWeek,
              borderColor: 'rgba(255, 99, 132, 1)',
              borderWidth: 2,
              fill: false
          }]
      }
  });

  // Code für das dritte Diagramm (Gesamttemperatur)
  const ctxAll = document.getElementById('temperatureChartAll').getContext('2d');
  const temperaturesAll = JSON.parse(document.getElementById('temperatureChartAll').getAttribute('data-temperatures'));
  const timestampsAll = JSON.parse(document.getElementById('temperatureChartAll').getAttribute('data-timestamps'));
  new Chart(ctxAll, {
      type: 'line',
      data: {
          labels: timestampsAll,
          datasets: [{
              label: 'Allzeittemperatur',
              data: temperaturesAll,
              borderColor: 'rgba(153, 102, 255, 1)',
              borderWidth: 2,
              fill: false
          }]
      }
  });

  // Code für das erste Feuchtigkeitsdiagramm (Tägliche Feuchtigkeit)
  const ctxHumidity = document.getElementById('humidityChart').getContext('2d');
  const humidities = JSON.parse(document.getElementById('humidityChart').getAttribute('data-humidities'));
  new Chart(ctxHumidity, {
      type: 'line',
      data: {
          labels: timestamps, // bereits vorhanden
          datasets: [{
              label: 'Luftfeuchtigkeit Tagesverlauf',
              data: humidities,
              borderColor: 'rgba(255, 159, 64, 1)',
              borderWidth: 2,
              fill: false
          }]
      }
  });

  // Code für das zweite Feuchtigkeitsdiagramm (Wöchentliche Feuchtigkeit)
  const ctxHumidityWeek = document.getElementById('humidityChartWeek').getContext('2d');
  const humiditiesWeek = JSON.parse(document.getElementById('humidityChartWeek').getAttribute('data-humidities'));
  new Chart(ctxHumidityWeek, {
      type: 'line',
      data: {
          labels: timestampsWeek, // bereits vorhanden
          datasets: [{
              label: 'Wochendurchschnitt Luftfeuchtigkeit',
              data: humiditiesWeek,
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 2,
              fill: false
          }]
      }
  });

  // Code für das dritte Feuchtigkeitsdiagramm (Gesamtfeuchtigkeit)
  const ctxHumidityAll = document.getElementById('humidityChartAll').getContext('2d');
  const humiditiesAll = JSON.parse(document.getElementById('humidityChartAll').getAttribute('data-humidities'));
  new Chart(ctxHumidityAll, {
      type: 'line',
      data: {
          labels: timestampsAll, // bereits vorhanden
          datasets: [{
              label: 'Allzeitluftfeuchtigkeit',
              data: humiditiesAll,
              borderColor: 'rgba(255, 206, 86, 1)',
              borderWidth: 2,
              fill: false
          }]
      }
  });
});
</script>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js">
</script>

<style>
  .page_content {
    display: flex;
    justify-content: space-between; /* Gibt etwas Abstand zwischen den Elementen */
    flex-wrap: wrap;
    margin: 20px;
  }

  .table_container, .chart_container {
    width: auto; /* Ein bisschen weniger als 50% um Platz zwischen den Containern zu haben */
    height: auto;
    max-width: 45%;
    box-sizing: border-box;
  }

  @media screen and (max-width: 768px) {
    .page_content {
      flex-direction: column;
    }

    .table_container, .chart_container {
      width: 100%;
    }
  }

  .h1 {
    font-family: poppins-black;
  }
</style>
